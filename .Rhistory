scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(df, aes(x = PF)) +
geom_histogram(aes(y =..density..),
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(df$PF), sd = sd(df$PF)))
ggplot(data_subset, aes(x = n)) +
geom_histogram(aes(y =..density..),
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(df$PF), sd = sd(df$PF)))
ggplot(data_subset, aes(x = n)) +
geom_histogram(aes(y =durationms),
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(df$PF), sd = sd(df$PF)))
ggplot(data_subset, aes(x = n)) +
geom_histogram(aes(y =durationms),
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(data_subset$durationms), sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x = n)) +
geom_histogram(aes(y =..durationms..),
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(data_subset$durationms), sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x = n)) +
geom_histogram(aes(y =..data_subset$durationms..),
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(data_subset$durationms), sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x = n)) +
geom_histogram(
breaks = seq(-50, 50, by = 10),
colour = "black",
fill = "white") +
stat_function(fun = dnorm, args = list(mean = mean(data_subset$durationms), sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x = n))
geom_histogram(binwidth=.25, colour="black", fill="white")
ggplot(data_subset, aes(x = n))
geom_histogram(binwidth=.25, colour="black", fill="white")
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x = n))
geom_histogram(binwidth=.25, colour="black", fill="white")
ggplot(data_subset, aes(x = durationms))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x = durationms))
geom_histogram(binwidth=.25, colour="black", fill="white")
geom_histogram(binwidth=.25, colour="red", fill="blue")
ggplot(data_subset, aes(x = durationms))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=.25, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 2, col = 'red',
args = list(mean = mean(r1$values), sd = sd(r1$values)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=.25, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 2, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
knitr::opts_knit$set(root.dir = getwd())
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 2, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 1, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=5000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=5000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=5000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=500, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=50, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=100, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=1000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=3000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=10000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=50000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
# Load the CSV file
file_path <- "/home/jbuhre/development/joepbuhre/api-tester/results/test.csv"
data <- read.csv(file_path)
# Parse specific columns
data_subset <- data[, c("n", "durationms", "total_loops", "group_limit")]
# data_subset <- data_subset %>% filter(total_loops<100)
# Create plots faceted by total_loops and group_limit
#data_subset <- data_subset %>% filter(total_loops == 100)
mean_duration <- mean(data_subset$durationms)
ggplot(data_subset, aes(x = n, y = durationms,  color = factor(group_limit))) +
geom_point() +
labs(x = "n", y = "Duration (ms)", title = "Test Results Analysis") +
scale_color_discrete(name = "Group Limit") +
geom_hline(yintercept = mean_duration, linetype = "dashed", color = "red") +
theme_minimal()
ggplot(data_subset, aes(x=durationms)) +
geom_histogram(aes(y = ..density..), binwidth=50000, colour="black", fill="white") +
stat_function(fun = dnorm, lwd = 0.5, col = 'red',
args = list(mean = mean_duration, sd = sd(data_subset$durationms)))
summary(data_subset)
summary(data_subset$durationms)
